#server:
#  port: 6001
#
#spring:
#  application:
#    name: gateway-server # 应用名
#    redis:
#      host: localhost # Redis服务器地址
#      port: 6379 # Redis服务器连接端口
#      # Redis 服务器连接密码（默认为空），注释放到上面来，不然控制台可能会一直打印日志
#      password:
#  cloud:
#    nacos:
#      discovery:
#        server-addr: 127.0.0.1:8848 # 注册中心地址
#    gateway:
#      discovery:
#        locator:
#          # true 开启以服务名称调用目标服务 /article-server
#          # http://localhost:8001/article/api/article/1361742086528913410 => http://localhost:6001/article-server/article/api/article/1361742086528913410
#          enabled: true
#      routes:
#         # 路由唯一标识
#        - id: blog-article
#          # 目标服务地址
#          # uri: http://localhost:8001
#          # 目标微服务名称 lb://目标服务名
#          uri: lb://article-server
#          # 断言，路由条件
#          predicates:
#            # 匹配访问路由，以 /article开头的请求代理到
#            # 访问 http://localhost:6001/article/api/article/1 代理到 http://localhost:8001/article/api/article/1
#            - Path=/article/**
#          filters:
#            # 代理转发去掉路径， /article/** ，会将 每个 /article 在过滤器中截取掉
#            # - StripPrefix=1
#            # 开启限流
#            - name: RequestRateLimiter
#              args:
#                # 限制过滤器bean名称
#                key-resolver: '#{@uriKeyResolver}'
#                # 希望每个用户每秒执行多少个请求。令牌桶填充的速率
#                redis-rate-limiter.replenishRate: 2
#                # 允许用户在一秒种内完成最大请求数。令牌桶最多可以容纳的令牌数量 。如果设置为0将阻止所有请求
#                redis-rate-limiter.burstCapacity: 4
#
#        # 路由唯一标识
#        - id: blog-question
#          # 目标微服务名称 lb://目标服务名
#          uri: lb://question-server
#          # 断言，路由条件
#          predicates:
#            # 匹配访问路由，以 /question 开头的请求代理到
#            - Path=/question/**
#          filters:
#            # 开启限流
#            - name: RequestRateLimiter
#              args:
#                # 限制过滤器bean名称
#                key-resolver: '#{@uriKeyResolver}'
#                # 希望每个用户每秒执行多少个请求。令牌桶填充的速率
#                redis-rate-limiter.replenishRate: 2
#                # 允许用户在一秒种内完成最大请求数。令牌桶最多可以容纳的令牌数量 。如果设置为0将阻止所有请求
#                redis-rate-limiter.burstCapacity: 4
#
#        # 路由唯一标识
#        - id: blog-system
#          # 目标微服务名称 lb://目标服务名
#          uri: lb://system-server
#          # 断言，路由条件
#          predicates:
#            # 匹配访问路由，以 /system 开头的请求代理到
#            - Path=/system/**
#          filters:
#            # 开启限流
#            - name: RequestRateLimiter
#              args:
#                # 限制过滤器bean名称
#                key-resolver: '#{@uriKeyResolver}'
#                # 希望每个用户每秒执行多少个请求。令牌桶填充的速率
#                redis-rate-limiter.replenishRate: 2
#                # 允许用户在一秒种内完成最大请求数。令牌桶最多可以容纳的令牌数量 。如果设置为0将阻止所有请求
#                redis-rate-limiter.burstCapacity: 4
#
#        # 路由唯一标识
#        - id: blog-auth
#          # 目标微服务名称 lb://目标服务名
#          uri: lb://auth-server
#          # 断言，路由条件
#          predicates:
#            # 匹配访问路由，以 /auth 开头的请求代理到
#            - Path=/auth/**
#          filters:
#            # 开启限流
#            - name: RequestRateLimiter
#              args:
#                # 限制过滤器bean名称
#                key-resolver: '#{@uriKeyResolver}'
#                # 希望每个用户每秒执行多少个请求。令牌桶填充的速率
#                redis-rate-limiter.replenishRate: 2
#                # 允许用户在一秒种内完成最大请求数。令牌桶最多可以容纳的令牌数量 。如果设置为0将阻止所有请求
#                redis-rate-limiter.burstCapacity: 4